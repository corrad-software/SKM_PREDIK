name: Deploy to EC2

on:
  push:
    branches:
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.14.0'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build application
        run: pnpm build
        env:
          PORT: 3000
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
          SUPABASE_JWT_SECRET: ${{ secrets.SUPABASE_JWT_SECRET }}
          SUPABASE_DATABASE_PASSWORD: ${{ secrets.SUPABASE_DATABASE_PASSWORD }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.EC2_SSH_KEY }}
          known_hosts: unnecessary
          if_key_exists: replace

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          # First, ensure the remote directory exists and set it up
          ssh $USERNAME@$HOST '
            # Install pnpm
            npm install -g pnpm@8
            
            # Install PM2
            npm install -g pm2
            
            # Create project directory
            mkdir -p /home/skm
          '

          # Copy the built files
          scp -r .output package.json pnpm-lock.yaml $USERNAME@$HOST:/home/skm/

          # Setup and start the application
          ssh $USERNAME@$HOST '
            cd /home/skm
            
            # Create .env file
            cat > .env << EOL
            PORT=3000
            SUPABASE_URL="${{ secrets.SUPABASE_URL }}"
            SUPABASE_KEY="${{ secrets.SUPABASE_KEY }}"
            SUPABASE_SERVICE_KEY="${{ secrets.SUPABASE_SERVICE_KEY }}"
            SUPABASE_JWT_SECRET="${{ secrets.SUPABASE_JWT_SECRET }}"
            SUPABASE_DATABASE_PASSWORD="${{ secrets.SUPABASE_DATABASE_PASSWORD }}"
            OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}"
            EOL
            
            # Install dependencies
            pnpm install
            
            # Stop any existing PM2 processes
            pm2 stop app || true
            pm2 delete app || true
            
            # Start the application
            pm2 start "pnpm preview" --name app
            pm2 save'
